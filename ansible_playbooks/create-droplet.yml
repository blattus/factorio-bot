---
- name: create droplet
  hosts: localhost
  connection: local
  gather_facts: false
  vars_files:
    - ../ansible_vars.yml

  tasks:
    - digital_ocean_droplet:
        unique_name: yes # "yes" makes it idempotent
        region: tor1 # slug of the region you would like your server to be created in.
        image: ubuntu-18-04-x64 # slug of the image you would like the droplet created with.
        wait: yes
        name: "factorio-srv" # name of the droplet
        size_id: s-2vcpu-4gb # smallest: s-1vcpu-1gb # slug of the size you would like the droplet created with.
        monitoring: yes
        state: present
        ssh_keys: "{{ do_ssh_keys }}" 
      register: created_droplet

    - debug:
        msg: "server ID is {{ created_droplet.data.droplet.id }}"
    
    - debug:
        msg: "server IP is {{ created_droplet.data.ip_address }}"

    - digital_ocean_tag:
        name: factorio-bot 
        resource_id: "{{ created_droplet.data.droplet.id }}"
        state: present
      register: tag_response

    - name: add hosts
      add_host:
        name: "{{ created_droplet.data.ip_address }}"
        groups: "digitalocean"

- name: configure the server
  hosts: digitalocean
  user: root
  gather_facts: false

  tasks:
    - name: wait for port 22 to become available
      wait_for:
        host: "{{ inventory_hostname }}"
        port: 22
      delegate_to: localhost

    - name: create factorio directory
      file: 
          path: /opt/factorio
          state: directory

    - name: copy factorio binary to server
      copy: 
        src: ../factorio_headless/factorio_headless_x64_1.1.0.tar.xz
        dest: /tmp/factorio_headless.tar.xz

    - name: unzip factorio server file
      unarchive:
        src: /tmp/factorio_headless.tar.xz
        dest: /opt/
        remote_src: yes

    - name: create save directory
      file: 
        path: /opt/factorio/saves
        state: directory

    - name: copy save file # TODO: make this the *latest* save
      copy:
        src: ../factorio_saves/latest_save.zip
        dest: /opt/factorio/saves/

    - name: copy system service
      copy:
        src: ../factorio.service
        dest: /etc/systemd/system/

    - name: enable factorio service, and do not touch the state
      service:
        name: factorio
        enabled: yes

    - name: start the factorio service, if not started
      service:
        name: factorio
        state: started

